# -*- coding: utf-8 -*-
"""이의준_2020105643_HW1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1whCUUeuB_ESCiQgFY5pzyIWOGN04jEVS
"""

# algorithm A
def insertion_sort(arr):
    for end in range(1, len(arr)):
        for i in range(end, 0, -1):
            if arr[i - 1] > arr[i]:
                arr[i - 1], arr[i] = arr[i], arr[i - 1]

# algorithm B
def split(values, first, last):
        splitVal = values[(first+last)//2]
        while first <= last:
            while values[first] < splitVal:
                first += 1
            while values[last] > splitVal:
                last -= 1
            if first <= last:
                values[first], values[last] = values[last], values[first]   # swap
                first, last = first + 1, last - 1
        return first

def quick_sort(values, first, last):
    if first < last:
        splitPoint = split(values, first, last)
        quick_sort(values, first, splitPoint-1)
        quick_sort(values, splitPoint, last) 
       
    return values

from random import randrange

N = [5000, 10000]

print("================== Insertion Sort ==================")
for n in N:
    print(f"n = {n}")
    print()
    print("[Before]")
    A = [randrange(1, 1001) for i in range(0, n)]
    print(A)
    insertion_sort(A)
    print("[After]")
    print(A)
    print()

print("================== Quick Sort ==================")
for n in N:
    print(f"n = {n}")
    print()
    print("[Before]")
    A = [randrange(1, 1001) for i in range(0, n)]
    print(A)
    quick_sort(A, 0, len(A)-1)
    print("[After]")
    print(A)
    print()